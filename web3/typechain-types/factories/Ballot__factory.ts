/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BytesLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../common";
import type { Ballot, BallotInterface } from "../Ballot";

const _abi = [
  {
    inputs: [
      {
        internalType: "bytes32[]",
        name: "proposalNames",
        type: "bytes32[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "chairperson",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "delegate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "voter",
        type: "address",
      },
    ],
    name: "giveRightToVote",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "proposals",
    outputs: [
      {
        internalType: "bytes32",
        name: "name",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "voteCount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "proposal",
        type: "uint256",
      },
    ],
    name: "vote",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "voters",
    outputs: [
      {
        internalType: "uint256",
        name: "weight",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "voted",
        type: "bool",
      },
      {
        internalType: "address",
        name: "delegate",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "vote",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "winnerName",
    outputs: [
      {
        internalType: "bytes32",
        name: "winnerName_",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "winningProposal",
    outputs: [
      {
        internalType: "uint256",
        name: "winningProposal_",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040516200142a3803806200142a83398181016040528101906200003791906200033a565b336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060018060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000018190555060005b81518110156200016e57600260405180604001604052808484815181106200010f576200010e6200038b565b5b6020026020010151815260200160008152509080600181540180825580915050600190039060005260206000209060020201600090919091909150600082015181600001556020820151816001015550508080600101915050620000e2565b5050620003ba565b6000604051905090565b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b620001da826200018f565b810181811067ffffffffffffffff82111715620001fc57620001fb620001a0565b5b80604052505050565b60006200021162000176565b90506200021f8282620001cf565b919050565b600067ffffffffffffffff821115620002425762000241620001a0565b5b602082029050602081019050919050565b600080fd5b6000819050919050565b6200026d8162000258565b81146200027957600080fd5b50565b6000815190506200028d8162000262565b92915050565b6000620002aa620002a48462000224565b62000205565b90508083825260208201905060208402830185811115620002d057620002cf62000253565b5b835b81811015620002fd5780620002e888826200027c565b845260208401935050602081019050620002d2565b5050509392505050565b600082601f8301126200031f576200031e6200018a565b5b81516200033184826020860162000293565b91505092915050565b60006020828403121562000353576200035262000180565b5b600082015167ffffffffffffffff81111562000374576200037362000185565b5b620003828482850162000307565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b61106080620003ca6000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c8063609ff1bd1161005b578063609ff1bd146101145780639e7b8d6114610132578063a3ec138d1461014e578063e2ba53f01461018157610088565b80630121b93f1461008d578063013cf08b146100a95780632e4176cf146100da5780635c19a95c146100f8575b600080fd5b6100a760048036038101906100a29190610a12565b61019f565b005b6100c360048036038101906100be9190610a12565b6102e5565b6040516100d1929190610a67565b60405180910390f35b6100e2610319565b6040516100ef9190610ad1565b60405180910390f35b610112600480360381019061010d9190610b18565b61033d565b005b61011c6106d7565b6040516101299190610b45565b60405180910390f35b61014c60048036038101906101479190610b18565b610759565b005b61016860048036038101906101639190610b18565b610946565b6040516101789493929190610b7b565b60405180910390f35b6101896109a3565b6040516101969190610bc0565b60405180910390f35b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090506000816000015403610229576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161022090610c38565b60405180910390fd5b8060010160009054906101000a900460ff161561027b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161027290610ca4565b60405180910390fd5b60018160010160006101000a81548160ff0219169083151502179055508181600201819055508060000154600283815481106102ba576102b9610cc4565b5b906000526020600020906002020160010160008282546102da9190610d22565b925050819055505050565b600281815481106102f557600080fd5b90600052602060002090600202016000915090508060000154908060010154905082565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090508060010160009054906101000a900460ff16156103d2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103c990610da2565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610440576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161043790610e0e565b60405180910390fd5b5b600073ffffffffffffffffffffffffffffffffffffffff16600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146105af57600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1691503373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036105aa576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105a190610e7a565b60405180910390fd5b610441565b60018160010160006101000a81548160ff021916908315150217905550818160010160016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090508060010160009054906101000a900460ff16156106b2578160000154600282600201548154811061068657610685610cc4565b5b906000526020600020906002020160010160008282546106a69190610d22565b925050819055506106d2565b81600001548160000160008282546106ca9190610d22565b925050819055505b505050565b6000806000905060005b60028054905081101561075457816002828154811061070357610702610cc4565b5b9060005260206000209060020201600101541115610747576002818154811061072f5761072e610cc4565b5b90600052602060002090600202016001015491508092505b80806001019150506106e1565b505090565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146107e7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107de90610f0c565b60405180910390fd5b600160008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160009054906101000a900460ff1615610877576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161086e90610f78565b60405180910390fd5b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000154146108fc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108f39061100a565b60405180910390fd5b60018060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000018190555050565b60016020528060005260406000206000915090508060000154908060010160009054906101000a900460ff16908060010160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060020154905084565b600060026109af6106d7565b815481106109c0576109bf610cc4565b5b906000526020600020906002020160000154905090565b600080fd5b6000819050919050565b6109ef816109dc565b81146109fa57600080fd5b50565b600081359050610a0c816109e6565b92915050565b600060208284031215610a2857610a276109d7565b5b6000610a36848285016109fd565b91505092915050565b6000819050919050565b610a5281610a3f565b82525050565b610a61816109dc565b82525050565b6000604082019050610a7c6000830185610a49565b610a896020830184610a58565b9392505050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610abb82610a90565b9050919050565b610acb81610ab0565b82525050565b6000602082019050610ae66000830184610ac2565b92915050565b610af581610ab0565b8114610b0057600080fd5b50565b600081359050610b1281610aec565b92915050565b600060208284031215610b2e57610b2d6109d7565b5b6000610b3c84828501610b03565b91505092915050565b6000602082019050610b5a6000830184610a58565b92915050565b60008115159050919050565b610b7581610b60565b82525050565b6000608082019050610b906000830187610a58565b610b9d6020830186610b6c565b610baa6040830185610ac2565b610bb76060830184610a58565b95945050505050565b6000602082019050610bd56000830184610a49565b92915050565b600082825260208201905092915050565b7f486173206e6f20726967687420746f20766f7465000000000000000000000000600082015250565b6000610c22601483610bdb565b9150610c2d82610bec565b602082019050919050565b60006020820190508181036000830152610c5181610c15565b9050919050565b7f416c726561647920766f7465642e000000000000000000000000000000000000600082015250565b6000610c8e600e83610bdb565b9150610c9982610c58565b602082019050919050565b60006020820190508181036000830152610cbd81610c81565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610d2d826109dc565b9150610d38836109dc565b9250828201905080821115610d5057610d4f610cf3565b5b92915050565b7f596f7520616c726561647920766f7465642e0000000000000000000000000000600082015250565b6000610d8c601283610bdb565b9150610d9782610d56565b602082019050919050565b60006020820190508181036000830152610dbb81610d7f565b9050919050565b7f53656c662d64656c65676174696f6e20697320646973616c6c6f7765642e0000600082015250565b6000610df8601e83610bdb565b9150610e0382610dc2565b602082019050919050565b60006020820190508181036000830152610e2781610deb565b9050919050565b7f466f756e64206c6f6f7020696e2064656c65676174696f6e2e00000000000000600082015250565b6000610e64601983610bdb565b9150610e6f82610e2e565b602082019050919050565b60006020820190508181036000830152610e9381610e57565b9050919050565b7f4f6e6c79206368616972706572736f6e2063616e20676976652072696768742060008201527f746f20766f74652e000000000000000000000000000000000000000000000000602082015250565b6000610ef6602883610bdb565b9150610f0182610e9a565b604082019050919050565b60006020820190508181036000830152610f2581610ee9565b9050919050565b7f54686520766f74657220616c726561647920766f7465642e0000000000000000600082015250565b6000610f62601883610bdb565b9150610f6d82610f2c565b602082019050919050565b60006020820190508181036000830152610f9181610f55565b9050919050565b7f54686520766f74657220616c7265616479206861732077656967687420616e6460008201527f206469646e277420766f7465207965742e000000000000000000000000000000602082015250565b6000610ff4603183610bdb565b9150610fff82610f98565b604082019050919050565b6000602082019050818103600083015261102381610fe7565b905091905056fea2646970667358221220fab7df3920458e3e8d74dac1d4ccba6caae60b8ed4e5c9022dd619bebfbd787564736f6c63430008180033";

type BallotConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BallotConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Ballot__factory extends ContractFactory {
  constructor(...args: BallotConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    proposalNames: BytesLike[],
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(proposalNames, overrides || {});
  }
  override deploy(
    proposalNames: BytesLike[],
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(proposalNames, overrides || {}) as Promise<
      Ballot & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Ballot__factory {
    return super.connect(runner) as Ballot__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BallotInterface {
    return new Interface(_abi) as BallotInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Ballot {
    return new Contract(address, _abi, runner) as unknown as Ballot;
  }
}
